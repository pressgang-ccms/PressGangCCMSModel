package org.jboss.pressgang.ccms.model;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.envers.Audited;
import org.jboss.pressgang.ccms.model.base.AuditedEntity;

/**
 * FilterTag generated by hbm2java
 */
@Entity
@Audited
@Cacheable
@Cache(usage = CacheConcurrencyStrategy.TRANSACTIONAL)
@Table(name = "FilterTag")
public class FilterTag extends AuditedEntity implements java.io.Serializable {
    private static final long serialVersionUID = -1480119876615559516L;

    private Integer filterTagId;
    private Filter filter;
    private Tag tag;
    private int tagState;

    public FilterTag() {
    }

    public FilterTag(final Filter filter, final Tag tag, final int tagState) {
        this.filter = filter;
        this.tag = tag;
        this.tagState = tagState;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "FilterTagID", unique = true, nullable = false)
    public Integer getFilterTagId() {
        return filterTagId;
    }

    public void setFilterTagId(Integer filterTagId) {
        this.filterTagId = filterTagId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "FilterID", nullable = false)
    @NotNull
    public Filter getFilter() {
        return filter;
    }

    public void setFilter(final Filter filter) {
        this.filter = filter;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "TagID", nullable = false)
    @NotNull(message = "filter.tag.notNull")
    public Tag getTag() {
        return tag;
    }

    public void setTag(final Tag tag) {
        this.tag = tag;
    }

    @Column(name = "TagState", nullable = false)
    public int getTagState() {
        return tagState;
    }

    public void setTagState(final int tagState) {
        this.tagState = tagState;
    }

    @Override
    @Transient
    public Integer getId() {
        return filterTagId;
    }

}
