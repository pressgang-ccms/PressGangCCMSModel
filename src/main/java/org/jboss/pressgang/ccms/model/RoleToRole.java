/*
  Copyright 2011-2014 Red Hat

  This file is part of PressGang CCMS.

  PressGang CCMS is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  PressGang CCMS is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with PressGang CCMS.  If not, see <http://www.gnu.org/licenses/>.
*/

package org.jboss.pressgang.ccms.model;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Cacheable;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.PreRemove;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.envers.Audited;
import org.jboss.pressgang.ccms.model.base.AuditedEntity;

/**
 * RoleToRole generated by hbm2java
 */
@Entity
@Audited
@Cacheable
@Cache(usage = CacheConcurrencyStrategy.TRANSACTIONAL)
@Table(name = "RoleToRole", uniqueConstraints = @UniqueConstraint(columnNames = {"PrimaryRole", "SecondaryRole", "RelationshipType"}))
public class RoleToRole extends AuditedEntity implements java.io.Serializable {
    private static final long serialVersionUID = -4323051325365483977L;

    private Integer roleToRoleId;
    private RoleToRoleRelationship roleToRoleRelationship;
    private Role primaryRole;
    private Role secondaryRole;

    public RoleToRole() {
    }

    public RoleToRole(final RoleToRoleRelationship roleToRoleRelationship, final Role primaryRole, final Role secondaryRole) {
        this.roleToRoleRelationship = roleToRoleRelationship;
        this.primaryRole = primaryRole;
        this.secondaryRole = secondaryRole;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "RoleToRoleID", unique = true, nullable = false)
    public Integer getRoleToRoleId() {
        return roleToRoleId;
    }

    public void setRoleToRoleId(Integer roleToRoleId) {
        this.roleToRoleId = roleToRoleId;
    }

    @ManyToOne(fetch = FetchType.LAZY, cascade = {CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH})
    @JoinColumn(name = "RelationshipType", nullable = false)
    @NotNull
    public RoleToRoleRelationship getRoleToRoleRelationship() {
        return roleToRoleRelationship;
    }

    public void setRoleToRoleRelationship(final RoleToRoleRelationship roleToRoleRelationship) {
        this.roleToRoleRelationship = roleToRoleRelationship;
    }

    @ManyToOne(cascade = {CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH})
    @JoinColumn(name = "PrimaryRole", nullable = false)
    @NotNull
    public Role getPrimaryRole() {
        return primaryRole;
    }

    public void setPrimaryRole(final Role primaryRole) {
        this.primaryRole = primaryRole;
    }

    @ManyToOne(cascade = {CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH})
    @JoinColumn(name = "SecondaryRole", nullable = false)
    @NotNull
    public Role getSecondaryRole() {
        return secondaryRole;
    }

    public void setSecondaryRole(final Role secondaryRole) {
        this.secondaryRole = secondaryRole;
    }

    @PreRemove
    private void preRemove() {
        primaryRole.getParentRoleToRole().remove(this);
        secondaryRole.getChildrenRoleToRole().remove(this);
    }

    @Override
    @Transient
    public Integer getId() {
        return roleToRoleId;
    }

}
