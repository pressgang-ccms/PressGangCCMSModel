/*
  Copyright 2011-2014 Red Hat, Inc

  This file is part of PressGang CCMS.

  PressGang CCMS is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  PressGang CCMS is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with PressGang CCMS.  If not, see <http://www.gnu.org/licenses/>.
*/

package org.jboss.pressgang.ccms.model;

// Generated Aug 8, 2011 11:54:01 AM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Cacheable;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.envers.Audited;
import org.jboss.pressgang.ccms.model.base.AuditedEntity;

/**
 * TagToTag generated by hbm2java
 */
@Audited
@Entity
@Cacheable
@Cache(usage = CacheConcurrencyStrategy.TRANSACTIONAL)
@Table(name = "TagToTag", uniqueConstraints = @UniqueConstraint(columnNames = {"PrimaryTagID", "SecondaryTagID", "RelationshipType"}))
public class TagToTag extends AuditedEntity implements java.io.Serializable {
    private static final long serialVersionUID = -7025237939786775336L;

    private Integer tagToTagId;
    private TagToTagRelationship tagToTagRelationship;
    private Tag primaryTag;
    private Tag secondaryTag;

    public TagToTag() {
    }

    public TagToTag(final TagToTagRelationship tagToTagRelationship, final Tag primaryTag, final Tag secondaryTag) {
        this.tagToTagRelationship = tagToTagRelationship;
        this.primaryTag = primaryTag;
        this.secondaryTag = secondaryTag;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "TagToTagID", unique = true, nullable = false)
    public Integer getTagToTagId() {
        return tagToTagId;
    }

    public void setTagToTagId(final Integer tagToTagId) {
        this.tagToTagId = tagToTagId;
    }

    @ManyToOne(fetch = FetchType.LAZY, cascade = {CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH})
    @JoinColumn(name = "RelationshipType", nullable = false)
    @NotNull
    public TagToTagRelationship getTagToTagRelationship() {
        return tagToTagRelationship;
    }

    public void setTagToTagRelationship(final TagToTagRelationship tagToTagRelationship) {
        this.tagToTagRelationship = tagToTagRelationship;
    }

    @ManyToOne(cascade = {CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH})
    @JoinColumn(name = "PrimaryTagID", nullable = false)
    @NotNull
    public Tag getPrimaryTag() {
        return primaryTag;
    }

    public void setPrimaryTag(final Tag primaryTag) {
        this.primaryTag = primaryTag;
    }

    @ManyToOne(cascade = {CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH})
    @JoinColumn(name = "SecondaryTagID", nullable = false)
    @NotNull
    public Tag getSecondaryTag() {
        return secondaryTag;
    }

    public void setSecondaryTag(final Tag secondaryTag) {
        this.secondaryTag = secondaryTag;
    }

    @Override
    @Transient
    public Integer getId() {
        return tagToTagId;
    }

}
