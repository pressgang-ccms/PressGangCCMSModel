/*
  Copyright 2011-2014 Red Hat

  This file is part of PresGang CCMS.

  PresGang CCMS is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  PresGang CCMS is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with PresGang CCMS.  If not, see <http://www.gnu.org/licenses/>.
*/

package org.jboss.pressgang.ccms.model;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.util.HashSet;
import java.util.Set;

import org.hibernate.annotations.BatchSize;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.envers.Audited;
import org.hibernate.validator.constraints.NotBlank;
import org.jboss.pressgang.ccms.model.base.AuditedEntity;
import org.jboss.pressgang.ccms.model.constants.Constants;

/**
 * TopicSourceUrl generated by hbm2java
 */
@Entity
@Audited
@Cacheable
@Cache(usage = CacheConcurrencyStrategy.TRANSACTIONAL)
@Table(name = "TopicSourceURL")
public class TopicSourceUrl extends AuditedEntity implements java.io.Serializable {
    private static final long serialVersionUID = 1923828486173137768L;

    private Integer topicSourceUrlId;
    private String sourceUrl;
    private String title;
    private String description;
    private Set<TopicToTopicSourceUrl> topicToTopicSourceUrls = new HashSet<TopicToTopicSourceUrl>(0);

    public TopicSourceUrl() {
    }

    public TopicSourceUrl(final String sourceUrl) {
        this.sourceUrl = sourceUrl;
    }

    public TopicSourceUrl(final String sourceUrl, final String description, final Set<TopicToTopicSourceUrl> topicToTopicSourceUrls) {
        this.sourceUrl = sourceUrl;
        this.description = description;
        this.topicToTopicSourceUrls = topicToTopicSourceUrls;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "TopicSourceURLID", unique = true, nullable = false)
    public Integer getTopicSourceUrlId() {
        return topicSourceUrlId;
    }

    public void setTopicSourceUrlId(final Integer topicSourceUrlId) {
        this.topicSourceUrlId = topicSourceUrlId;
    }

    @Column(name = "SourceURL", nullable = false, length = 2048)
    @NotNull(message = "{topicsourceurl.url.notBlank}")
    @NotBlank(message = "{topicsourceurl.url.notBlank}")
    @Size(max = 2048)
    public String getSourceUrl() {
        return sourceUrl;
    }

    public void setSourceUrl(final String sourceUrl) {
        this.sourceUrl = sourceUrl;
    }

    @Column(name = "Title", nullable = false, length = 255)
    @Size(max = 255)
    public String getTitle() {
        return title;
    }

    public void setTitle(final String title) {
        this.title = title;
    }

    @Column(name = "Description", columnDefinition = "TEXT")
    @Size(max = 65535)
    public String getDescription() {
        return description;
    }

    public void setDescription(final String description) {
        this.description = description;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "topicSourceUrl")
    @Cache(usage = CacheConcurrencyStrategy.TRANSACTIONAL)
    @BatchSize(size = Constants.DEFAULT_BATCH_SIZE)
    public Set<TopicToTopicSourceUrl> getTopicToTopicSourceUrls() {
        return topicToTopicSourceUrls;
    }

    public void setTopicToTopicSourceUrls(final Set<TopicToTopicSourceUrl> topicToTopicSourceUrls) {
        this.topicToTopicSourceUrls = topicToTopicSourceUrls;
    }

    @Override
    @Transient
    public Integer getId() {
        return topicSourceUrlId;
    }
}